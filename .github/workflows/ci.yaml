name: Build and Deploy

on:
  push:
    branches: [ main ]

concurrency: ci-${{ github.ref }}

env:
  assets-bucket: whobrokethecloud-assets

jobs:
  api:
    runs-on: ubuntu-latest
    name: API
    env:
      working-directory: ./api
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.working-directory }}/
          file: ${{ env.working-directory }}/Dockerfile
          tags: whobrokethecloud/api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs:
            - 'type=local,tar=api.tar'
      - name: Archive api container iamge
        uses: actions/upload-artifact@v3
        with:
          name: api-container
          path: |
            api.tar
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version-file: ${{ env.working-directory }}/go.mod
          cache: true
          cache-dependency-path: ${{ env.working-directory }}/go.sum
      - name: Go test
        if: always()
        run: go test ./...
        working-directory: ${{ env.working-directory }}
      - name: Go vet
        if: always()
        run: go vet ./...
        working-directory: ${{ env.working-directory }}
      - name: Staticcheck
        if: always()
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.1"
          install-go: false
          cache-key: ${{ matrix.go }}
          working-directory: ${{ env.working-directory }}
  frontend:
    runs-on: ubuntu-latest
    env:
      working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.JS 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: npm ci
        working-directory: ${{ env.working-directory }}
      # - run: npm test
      #   working-directory: ${{ env.working-directory }}
      - run: npm run build
        env:
          CI: false
        working-directory: ${{ env.working-directory }}
      - name: Archive frontend artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-assets
          path: |
            ${{ env.working-directory }}/build/
  publish:
    needs:
      - frontend
    runs-on: ubuntu-latest
    steps:
      - run: python -m pip install s3cmd
      - name: Download frontend artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-assets
          path: frontend/
      - name: Upload frontend assets to object storage
        run: |
            s3cmd \
              --host=us-east-1.linodeobjects.com \
              --host-bucket="%(bucket)s.us-east-1.linodeobjects.com" \
              --no-mime-magic \
              --acl-public \
              sync \
              frontend/ \
              s3://${{ env.assets-bucket }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}